# Rime schema
# encoding: utf-8

__include: sbxlm.yaml:/prelude

schema:
  schema_id: sbpy
  name: 声笔拼音
  version: "10.0"
  icon: "sbxlm.ico"
  author:
    - 戴石麟 <https://sbxlm.github.io>
    - 蓝落萧 <https://tansongchen.com>
  dependencies:
    - hypy
    - bihua
    - zhlf

switches:
  - name: ascii_mode
    reset: 0
    states: [中文, 西文]
  - name: ascii_punct
    states: [。，, ．，]
  - name: zh_trad
    reset: 0
    states: [简体, 繁体]
  - name: postpone
    reset: 0
    states: [前置, 后置]
  - options: [free, fixed, mixed, popping, strong]
    reset: 0
    states: [自由, 固定, 混顶, 纯顶, 强顶]
  - name: is_hidden
    states: [提示, 隐藏]
    reset: 1  # 1为隐藏：不提示第二页的固定字词
  # 为了避免拥挤，不显示下面的状态
  - name: auto_inline
    reset: 1  # 首字母大写进入临时英文状态
  - name: is_buffered
    reset: 0  # 是否为缓冲输入模式

engine:
  processors:
    - lua_processor@*sbxlm.ascii_composer
    - ascii_composer
    - recognizer
    - lua_processor@*sbxlm.key_binder
    - key_binder
    - lua_processor@*sbxlm.editor
    - lua_processor@*sbxlm.popping
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@sbzdy
    - affix_segmentor@bihua
    - affix_segmentor@hypy
    - affix_segmentor@zhlf
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - script_translator
    - table_translator@bihua
    - script_translator@hypy
    - script_translator@zhlf
    - lua_translator@*sbxlm.utils.datetime
    - lua_translator@*sbxlm.utils.number
    - lua_translator@*sbxlm.utils.calculator
    - table_translator@sbzdy
    - history_translator
  filters:
    - reverse_lookup_filter@reverse_lookup
    - lua_filter@*sbxlm.fix
    - lua_filter@*sbxlm.postpone
    - lua_filter@*sbxlm.select_key_to_comment
    - simplifier
    - uniquifier

algebra:
  # 1. 冠零声
  - xform/\b(?=[aoe])/v/
  # 2. 去翘舌
  - xform/(?<=[zcs])h//
  # 3. 省介音
  - xform/(?<=[jqx])i(?=[aeo])//
  # 4. 截韵尾
  - xform/\b([a-z]{3})[a-z]+/$1/
  # 5. 去鼻音
  - xform/(.)n(?=\d)/$1$1/
  # 6. 理特例
  - xform/er/e/
  - xform/(?<=[ln])v/u/
  # 7. 补笔画
  - xform/\b([a-z\d]{5})\d+/$1/
  - xlit/12345/eiuoa/

popping:
  __append:
    # 纯顶模式，单字、二字词、三字词
    - when: popping
      match: "([bpmfdtnlgkhjqxzcsrywv][aeuio]{0,4}){1,3}[aeiou]+"
      accept: "[bpmfdtnlgkhjqxzcsrywv]"
    # 纯顶模式，四字词和多字词
    - when: popping
      match: "([bpmfdtnlgkhjqxzcsrywv][aeuio]{0,4}){3}[bpmfdtnlgkhjqxzcsrywv]([aeiou]{2,})?"
      accept: "[bpmfdtnlgkhjqxzcsrywv]"

    # 强顶模式，单字、二字词、三字词
    - when: strong
      match: "([bpmfdtnlgkhjqxzcsrywv][aeuio]{0,4}){1,3}[aeiou]+"
      accept: "[bpmfdtnlgkhjqxzcsrywv]"
    # 强顶模式，四字词和多字词
    - when: strong
      match: "([bpmfdtnlgkhjqxzcsrywv][aeuio]{0,4}){4,}"
      accept: "[bpmfdtnlgkhjqxzcsrywv]"
    # 强顶模式，大写参与编码
    - when: strong
      match: "([bpmfdtnlgkhjqxzcsrywv][aeuio]{0,4}){4,}"
      accept: "[BPMFDTNLGKHJQXZCSRYWV]"
      strategy: append

    # 混顶模式，单字
    - when: mixed
      match: "[bpmfdtnlgkhjqxzcsrywv][aeiou]{3,}"
      accept: "[bpmfdtnlgkhjqxzcsrywv]"
    # 混顶模式，二字词之一
    - when: mixed
      match: "[bpmfdtnlgkhjqxzcsrywv][aeiou]{1,2}[bpmfdtnlgkhjqxzcsrywv][aeiou]*"
      accept: "[bpmfdtnlgkhjqxzcsrywv]"
    # 混顶模式，二字词和三字词
    - when: mixed
      match: "[bpmfdtnlgkhjqxzcsrywv]{2,3}[aeiou]+"
      accept: "[bpmfdtnlgkhjqxzcsrywv]"
    # 混顶模式，四字词
    - when: mixed
      match: "[bpmfdtnlgkhjqxzcsrywv]{4}([aeiou]{2,})?"
      accept: "[bpmfdtnlgkhjqxzcsrywv]"

speller:
  alphabet: "bpmfdtnlgkhjqxzcsrywvaeiou"
  initials: "bpmfdtnlgkhjqxzcsrywv"
  algebra:
    __include: /algebra
    __append:
      - derive/^([a-z]).+$/$1/
      - derive/^([a-z]{2}).+$/$1/
      - derive/^([a-z]{3}).+$/$1/
      - derive/^([a-z]{4}).+$/$1/
  popping:
    __patch:
      - /popping
      - sbxlm.yaml:/basic_popping

translator:
  dictionary: sbpy
  packs:
    - sbpy.base
    - sbpy.ext
    - sbpy.tencent
  fix_combination: true

punctuator:
  import_preset: sbxlm

recognizer:
  import_preset: sbxlm
  patterns:
    sbjm: ''

sbpy_extra_bindings:
  __append:
    - { when: has_menu, accept: 1, send_sequence: "{Shift+Right}" }
    - { when: has_menu, accept: 0, send_sequence: "{End}" }
    - { match: "[bpmfdtnlgkhjqxzcsrywv][a-z]{3,}", accept: "'", send_sequence: "{Shift+Right}{Shift+Right}" }
    - { match: "[bpmfdtnlgkhjqxzcsrywv]{3}", accept: "'", send_sequence: "{Home}{Right}{space}{Left}{space}{space}"}
    - { match: "[bpmfdtnlgkhjqxzcsrywv][a-z]{0,1}", accept: "'", send_sequence: "{Page_Down}{space}" }
    - { match: "[bpmfdtnlgkhjqxzcsrywv][a-z]{0,1}", accept: "4", send_sequence: "{Page_Down}2" }
    - { match: "[bpmfdtnlgkhjqxzcsrywv][a-z]{0,1}", accept: "5", send_sequence: "{Page_Down}3" }
    - { match: "[bpmfdtnlgkhjqxzcsrywv][a-z]{0,1}", accept: "6", send_sequence: "{Page_Down}7" }
    - { match: "[bpmfdtnlgkhjqxzcsrywv][aeuio]{0,1}", accept: ";", send_sequence: "{Page_Down}8" }
    - { match: "[bpmfdtnlgkhjqxzcsrywv]{2}", accept: Tab, send_sequence: "{Page_Down}8" }

key_binder:
  bindings:
    __patch: 
      - sbxlm.yaml:/rime_key_bindings
      - sbxlm.yaml:/sbxlm_basic_bindings
      - /sbpy_extra_bindings

reverse_lookup:
  __include: sbxlm.yaml:/prelude/reverse_lookup
  dictionary: sbpy
  comment_format:
    __include: /algebra

menu:
  page_size: 6
  alternative_select_keys: "_23789"
  alternative_select_labels: ["", "", "", "", "", ""]
  select_comment_pattern: "^[bpmfdtnlgkhjqxzcsrywv].*$"
